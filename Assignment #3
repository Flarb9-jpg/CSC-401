<!DOCTYPE html>
<html>
  <head>
    <title>Assignment 3</title>
  </head>
  <body>
    <h2>
      <u>Assignment 3</u>
    </h2>
    <h3>
      <i>By: Ross Pierson</i>
    </h3>
    <a href="index.html">Go Back Home</a>
    <form id="form">
      Choose an amount (Do not hit enter):
      <input type="range" name="splitter" id="choice" min="5" max="25" input=""\
>
      <br>
    </form>
    <p>Value: <span id="demo"></span></p>
    <script>
      var slider = document.getElementById("choice");
      var output = document.getElementById("demo");
      output.innerHTML = slider.value;
      slider.oninput = function()
      {
        output.innerHTML = this.value;
      }
    </script>
    <button type="button" id="Submit" onclick="tableCreator()">Submit</button>
    <p id="length"></p>
    <p id="steps"></p>
    <p id="revenue2"></p>
    <p id="revenue3"></p>
    <p id="testPrice"></p>
    <p id="testRevenue"></p>
    <br>
    <script>
      const price = [];
      const price2 = [];
      price[0] = 0;
      function tableCreator()
      {
        var count = 0;
        var input = document.getElementById("choice").value;
        document.getElementById("length").innerHTML = "Rod Length: " + input;
        var body = document.body;
        tbl  = document.createElement('table');
        tbl.style.width  = '200px';
        tbl.style.border = '1px solid black';
        for(var i = 0; i < 2; i++)
        {
          var tr = tbl.insertRow();
          for(var j = 0; j < input; j++)
          {
            if(i == 2 && j == 1)
            {
              break;
            }
            else
            {
              var td = tr.insertCell();
              if (i == 0)
              {
                td.appendChild(document.createTextNode(j + 1));
              }
              else if (i == 1)
              {
                var result = Math.floor(Math.random() * 100)+ 1;
                while (j == 0 && result > (100 / input))
                {
                  var result = Math.floor(Math.random() * 100)+ 1;
                }
                while (j > 0 && (result < price2[j-1] || result > ((j + 1) * (100/input))))
                {
                  var result = Math.floor(Math.random() * 100)+ 1;
                }
                price[j + 1] = result;
                price2[j] = result;
                td.appendChild(document.createTextNode(result));
              }
              td.style.border = '1px solid black';
              if(i == 1 && j == 1)
              {
                td.setAttribute('rowSpan', '2');
              }
            }
          }
        }
        body.appendChild(tbl);
//      cutRod();
//      }
//      function cutRod()
//      {
        var revenue = [];
        revenue[0] = 0;
        for (var k = 1; k <= input; k++)
        {
          var q = -500;
          //var r = 500;
          for (var l = 1; l <= k; l++)
          {
            count++;
            q = Math.max(q,price[l] + revenue[k - l]);
            //r = Math.min(r,price[l] + revenue[k - l]);
          }
          revenue[k] = q;
        }
        document.getElementById("steps").innerHTML ="Number of Steps: " + count;
        document.getElementById("revenue2").innerHTML ="Maximum Revenue: " + revenue[input];
        //document.getElementById("revenue3").innerHTML ="Minimum Revenue: " + r;
        document.getElementById("testPrice").innerHTML ="Price Array: " + price;
        document.getElementById("testRevenue").innerHTML ="Revenue Array: " + revenue;
//      matrixTable();
//      }
//      function matrixTable()
//      {
        var body = document.body;
        var count2 = input + 1;
        tbl  = document.createElement('table');
        tbl.style.width  = '200px';
        tbl.style.border = '1px solid black';
        for(var row = 0; row <= input; row++)
        {
          var tr = tbl.insertRow();
          for(var column = 0; column <= input; column++)
          {
            if(row == count2 && column == count2)
            {
              break;
            }
            else
            {
              var td = tr.insertCell();
              if (row == 0)
              {
                td.appendChild(document.createTextNode(column));
              }
              else if (column == 0)
              {
                td.appendChild(document.createTextNode(row));
              }
              else
              {
                var result = price[column] + revenue[row - column];
                td.appendChild(document.createTextNode(result));
              }
              td.style.border = '1px solid black';
              if(row == 1 && column == 1)
              {
                td.setAttribute('rowSpan', '1');
              }
            }
          }
        }
        body.appendChild(tbl);
      }
    </script>
    <p>With the Rod Cutting Problem, we are able to determine the maximum or minimum cost that can be obtained through cu\
tting a certain rod into two pieces of varying length. The maximum reveenue is determined through a matrix of the the pri\
ce of the length of the rod and the revenue gained from the previous length. Where a normal two dimensional matrix would \
take at least n^2 time, the process to fill out this 2D array does not take as long since only half of the table will be \
filled since the reveunue is reliant on up to one less of the current price length. Furthermore most information is relia\
nt on previous information already given and stored, making it seem like a recursive problem. However according to this g\
raph, with a length of 5, the number of steps to determine the maximum revenue is only 15, where with a length of 25 the \
steps are already up to 325. This seems to show an exponential growth in the amount of steps needed not for the creation \
of the table, but rather for the need to compare every value in a row to see which combination is the most optimal price.\
<p>
    <script>
        window.onload = function ()
        {
          var chart = new CanvasJS.Chart("chartContainer", {
          animationEnabled: true,
          theme: "light2", // "light1", "light2", "dark1", "dark2"
          title:{
          text: "Rod Cutting Steps"
          },
          axisY: {
          title: "Number of Steps"
          },
          data: [{
          type: "column",
          showInLegend: true,
          legendMarkerColor: "grey",
         legendText: "Number of Rod Cuts",
          dataPoints: [
          { y: 15, label: "Five" },
          { y: 55,  label: "Ten" },
          { y: 120,  label: "Fifteen" },
          { y: 210,  label: "Twenty" },
          { y: 325,  label: "Twenty Five" }
          ]
          }]
          });
          chart.render();
        }
      </script>
</head>
<body>
  <div id="chartContainer" style="height: 370px; width: 100%;"></div>
  <script src="https://canvasjs.com/assets/script/canvasjs.min.js"></script>
</body>
</html>
        
